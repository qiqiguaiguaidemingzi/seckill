<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd"  >
        <!-- 配置整合mybatis过程 -->
        <!-- 1：配置数据库相关参数 -->
        <context:property-placeholder location="classpath:jdbc.properties"/>
        <!-- 2.数据库连接池 -->
        <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        	<!-- 配置连接池属性 -->
        	<property name="driverClass" value="${jdbc.driver}"></property>
			<property name="jdbcUrl" value="${jdbc.url}"></property>
			<property name="user" value="${jdbc.username}"></property>
			<property name="password" value="${jdbc.password}"></property>
			
			<!-- c3p0连接池属性 -->
			<property name="maxPoolSize" value="30"></property>
			<property name="minPoolSize" value="10"></property>
			<!-- 关闭连接后不自动commit -->
			<property name="autoCommitOnClose" value="false"></property>
			<!-- 获取连接的超时时间 -->
			<property name="checkoutTimeout" value="3000"></property>
			<!-- 当获取连接失败的重试次数 -->
			<property name="acquireRetryAttempts" value="2"></property>
        </bean>
        
        <!-- 3:配置sqlSessionFactory对象 -->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        	<!-- 注入数据库连接池 -->
        	<property name="dataSource" ref="dataSource"></property>
        	<!-- 配置mybatis全局配置文件：mybatis-config.xml -->
        	<property name="configLocation" value="classpath:mybatis-config.xml"></property>
        	<!-- 扫描entity包，使用别名，如：com.lin.entity.Seckill -> Seckill  -->
        	<property name="typeAliasesPackage" value="com.lin.entity"></property>
        	<!-- 扫描sql配置文件：mapper需要的xml文件 -->
        	<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
        </bean>
        
        <!-- 4：配置扫描Dao接口包，动态实现Dao接口，并注入到spring容器中 -->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        	<!-- 注入sqlSessionFactory对象 -->
        	<!-- sqlSessionFactoryBeanName为后处理的方式，原先的sqlSessionFactory已经被弃用，因为存在bug：可能出现jdbc.properties文件尚未被加载，此时的dataSource就是错误的 -->
        	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        	<!-- 给出需要扫描的Dao接口包 -->
        	<property name="basePackage" value="com.lin.dao"></property>
        </bean>
        
        <!-- RedisDao -->
        <bean id="redisDao" class="com.lin.dao.cache.RedisDao">
        	<constructor-arg index="0" value="192.168.91.130"></constructor-arg>
        	<constructor-arg index="1" value="6379"></constructor-arg>
        </bean>
        
</beans>